import { ComponentMeta, ComponentStory } from '@storybook/react'
import React from 'react'
import { FetchHomePageDocument } from '../graphql'
import * as Home from './Home'

export default {
  title: 'Pages/Home/Home',
  component: Home.Template,
} as ComponentMeta<typeof Home.Template>

const Template: ComponentStory<typeof Home.Template> = (args) => (
  <Home.Template {...args} />
)

export const Default = Template.bind({})

Default.args = {
  explorer: {
    name: 'Ethereum',
    url: 'https://etherscan.io/',
  },
  featuredTokens: [
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-49600015852111813047896604022884353921118519942981476140015855675123490232454',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-35830987083353123895755779054112650157316399236059730431728023881104583369287',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-35830987083353123895755779054112650157316399236059730431857079010031714855232',
  ],
  limit: 10,
  now: '2022-05-22T04:53:29.881Z',
  tokens: [
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-49600015852111813047896604022884353921118519942981476140033905752223912514566',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-49600015852111813047896604022884353921118519942981476140020247428532621763333',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-36174914148539116512882615125906196155176598740777344057341809415099024308534',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-36174914148539116512882615125906196155176598740777344057337490697616873251958',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-36174914148539116512882615125906196155176598740777344057326027700575544091737',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-97430781528009278955669206608191540911214288583714243278205583442174024446976',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-97430781528009278955669206608191540911214288583714243278191899535271104058944',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-97430781528009278955669206608191540911214288583714243278190576812899460982921',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-4484280834982899386339876712021070801677686240476063982847630681967429947920',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-4484280834982899386339876712021070801677686240476063982849580210926536556579',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-35830987083353123895755779054112650157316399236059730431733743710891490551648',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-35830987083353123895755779054112650157316399236059730431718005638263302361616',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-35830987083353123895755779054112650157316399236059730431713574065421866334033',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-35830987083353123895755779054112650157316399236059730431699666172363286849574',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-4484280834982899386339876712021070801677686240476063982817239522845451035414',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-35830987083353123895755779054112650157316399236059730431735096448023648421216',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-35830987083353123895755779054112650157316399236059730431737752464526040703333',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-35830987083353123895755779054112650157316399236059730431719309693266663016809',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-4484280834982899386339876712021070801677686240476063982830561663425538396807',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-97430781528009278955669206608191540911214288583714243278201385790445570040066',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-97430781528009278955669206608191540911214288583714243278193187500893046936640',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-36174914148539116512882615125906196155176598740777344057324682489869474805575',
    '97-0xaade84b6a5f76c0a5f7ae91e65197329eb23763f-36174914148539116512882615125906196155176598740777344057338786883833218598195',
    '97-0xdd6a37f77754d194b5ec5bb2821bf29375e17da1-49600015852111813047896604022884353921118519942981476140030955576111085847079',
  ],
}

Default.parameters = {
  apolloClient: {
    mocks: [
      {
        request: {
          query: FetchHomePageDocument,
          variables: {
            featuredIds: Default.args.featuredTokens,
            now: new Date(Default.args.now || ''),
            limit: Default.args.limit,
            assetIds: Default.args.tokens,
            address: '',
          },
        },
        result: require('./Home.default.mock.json'),
      },
    ],
  },
}
